// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`all options are used if specified 1`] = `
Array [
  Array [
    Object {
      "appDockerImage": "one-app:5.0.0",
      "containerName": undefined,
      "createDockerNetwork": false,
      "devEndpointsFile": "/fake/path/to/fake-module/dev.endpoints.js",
      "dockerNetworkToJoin": "one-test-environment-1234",
      "envVars": Object {
        "MY_ENV_VAR": "value",
      },
      "includeJaeger": false,
      "logFormat": "machine",
      "logLevel": "info",
      "moduleMapUrl": "https://example.com/module-map.json",
      "modulesToServe": Array [
        "/fake/path/to/fake-module",
      ],
      "offline": true,
      "outputFile": "/fake/path/to/fake-module/one-app.log",
      "parrotMiddlewareFile": "/fake/path/to/fake-module/dev.middleware.js",
      "rootModuleName": "frank-lloyd-root",
      "useDebug": false,
      "useHost": true,
    },
  ],
]
`;

exports[`prints help message 1`] = `
"Options:
  --version                 Show version number                        [boolean]
  --module-map-url          module map for One App to use and fetch modules from
                                                                        [string]
  --root-module-name        name of the module to serve as an entry point to
                            your application                 [string] [required]
  --docker-image            docker image to use for One App  [string] [required]
  --log-format              Presentation of log entries
                            [string] [choices: \\"friendly\\", \\"verbose\\", \\"machine\\"]
  --log-level               Lowest level of log entries to show
                     [string] [choices: \\"error\\", \\"warn\\", \\"log\\", \\"info\\", \\"trace\\"]
  --parrot-middleware       path to parrot dev middleware file for One App to
                            use for Parrot mocking                      [string]
  --modules                 path to local module to serve to One App     [array]
  --dev-endpoints           path to dev endpoints file for One App to use for
                            its One App Dev Proxy set up                [string]
  --envVars                 Environment variables to be applied to the One App
                            instance
  --output-file             File to redirect all stdout and stderr from One App
                            Container to                                [string]
  --include-jaeger          Load Jaeger all-in-one container for tracing
                                                      [boolean] [default: false]
  --create-docker-network   Creates a new docker network
                                                      [boolean] [default: false]
  --docker-network-to-join  Connect One App container to a docker network
                                                                        [string]
  --use-host                Use req.headers.host instead of localhost for
                            one-app-dev-cdn           [boolean] [default: false]
  --offline                 skip docker pull when the docker registry is not
                            available / offline       [boolean] [default: false]
  ----container-name        Assign a container name with the --name option
                                                                        [string]
  --use-debug               Attaches the node debugger[boolean] [default: false]
  --help                    Show help                                  [boolean]"
`;
